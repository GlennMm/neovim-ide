local status_ok, alpha = pcall(require, "alpha")
if not status_ok then
  return
end

local icons = require "user.icons"

local dashboard = require "alpha.themes.dashboard"
-- dashboard.section.header.val = {
--   [[                               __                ]],
--   [[  ___     ___    ___   __  __ /\_\    ___ ___    ]],
--   [[ / _ `\  / __`\ / __`\/\ \/\ \\/\ \  / __` __`\  ]],
--   [[/\ \/\ \/\  __//\ \_\ \ \ \_/ |\ \ \/\ \/\ \/\ \ ]],
--   [[\ \_\ \_\ \____\ \____/\ \___/  \ \_\ \_\ \_\ \_\]],
--   [[ \/_/\/_/\/____/\/___/  \/__/    \/_/\/_/\/_/\/_/]],
-- }
dashboard.section.header.val = {
  [[                                                                                          ]],
  [[  _________       ___           __________    ____________    ____________                ]],
  [[ /  _____  \     /\  \         /\   ______\  /\   ______  \  /\   ______  \               ]],
  [[/\  \___/\__\    \ \  \        \ \  \_____/  \ \  \____/\  \ \ \  \____/\  \              ]],
  [[\ \  \  \/__/____ \ \  \        \ \  \______  \ \  \   \ \  \ \ \  \   \ \  \             ]],
  [[ \ \  \ /\__   __\ \ \  \        \ \   _____\  \ \  \   \ \  \ \ \  \   \ \  \            ]],
  [[  \ \  \\/_/\  \_/  \ \  \        \ \  \____/   \ \  \   \ \  \ \ \  \   \ \  \           ]],
  [[   \ \  \__\_\  \    \ \  \______  \ \  \______  \ \  \   \ \  \ \ \  \   \ \  \    ___   ]],
  [[    \ \_________/     \ \________\  \ \________\  \ \__\   \ \__\ \ \__\   \ \__\  /\__\  ]],
  [[     \/________/       \/________/   \/________/   \/__/    \/__/  \/__/    \/__/  \/__/  ]],
  [[                                                                                          ]],
  [[                              ___________________________________                         ]],
  [[                             /\__________________________________\                        ]],
  [[                             \/__________________________________/                        ]],
  [[                                                                                          ]],
  [[            ___      ___       __________      ___________    ___________    ___     ___         ]],
  [[           /\  \    /\  \     /\   ____  \    /\   _____  \  /\    ____  \  /\  \   /\  \        ]],
  [[           \ \  \   \ \  \    \ \  \__/\  \   \ \  \___/\  \ \ \  \___/\  \ \ \  \  \ \  \       ]],
  [[            \ \  \___\_\  \    \ \  \ \ \  \   \ \  \__\_\  \ \ \  \__\_\  \ \ \  \  \ \  \      ]],
  [[             \ \   ______  \    \ \  \_\_\  \   \ \   _______\ \ \   _______\ \ \  \__\_\  \     ]],
  [[              \ \  \____/\  \    \ \   ____  \   \ \  \______/  \ \  \______/  \ \________  \    ]],
  [[               \ \  \   \ \  \    \ \  \__/\  \   \ \  \         \ \  \         \/_______/\  \   ]],
  [[                \ \__\   \ \__\    \ \__\ \ \__\   \ \__\         \ \__\          /\__________\  ]],
  [[                 \/__/    \/__/     \/__/  \/__/    \/__/          \/__/          \/__________/  ]],
  [[                    ___________    ___________     ______      ___    ____________    __________         ]],
  [[                   /\   _____  \  /\  _______ \   /\  ___`    /\__\  /\   ______  \  /\   ____  \        ]],
  [[                   \ \  \___/\__\ \ \ \      \ \  \ \ \  ` `  \/__/  \ \  \____/\  \ \ \  \__/\__\       ]],
  [[                    \ \  \  \/__/  \ \ \      \ \  \ \ \   \ \   ___  \ \  \   \ \  \ \ \  \ \/__/_      ]],
  [[                     \ \  \         \ \ \      \ \  \ \ \   \ \ /\  \  \ \  \   \ \  \ \ \  \ /\_  \     ]],
  [[                      \ \  \     ___ \ \ \      \ \  \ \ \   / \\ \  \  \ \  \   \ \  \ \ \  \\/_/\ \    ]],
  [[                       \ \  \___/\  \ \ \ \______\ \  \ \ \_/  / \ \  \  \ \  \   \ \  \ \ \  \__\_\ \   ]],
  [[                        \ \__________\ \ \__________\  \ \____/   \ \__\  \ \__\   \ \__\ \ \_________\  ]],
  [[                         \/__________/  \/__________/   \/___/     \/__/   \/__/    \/__/  \/_________/  ]],
  [[                                                                                         ]]
}
dashboard.section.buttons.val = {
  dashboard.button("f", "  Find file", ":Telescope find_files <CR>"),
  dashboard.button("e", "  New file", ":ene <BAR> startinsert <CR>"),
  dashboard.button("p", "  Find project", ":lua require('telescope').extensions.projects.projects()<CR>"),
  dashboard.button("r", "  Recent files", ":Telescope oldfiles <CR>"),
  dashboard.button("t", "  Find text", ":Telescope live_grep <CR>"),
  -- dashboard.button("s", icons.ui.SignIn .. " Find Session", ":Telescope sessions save_current=false <CR>"),
  dashboard.button("c", "  Config", ":e ~/.config/nvim/init.lua <CR>"),
  dashboard.button("u", "  Update", ":PackerSync<CR>"),
  dashboard.button("q", "  Quit", ":qa<CR>"),
}
local function footer()
  -- NOTE: requires the fortune-mod package to work
  -- local handle = io.popen("fortune")
  -- local fortune = handle:read("*a")
  -- handle:close()
  -- return fortune
  return {
    -- [[    __      ___       __________      ___________    ___________    ___     ___         ]],
    -- [[  /\  \    /\  \     /\   ____  \    /\   _____  \  /\    ____  \  /\  \   /\  \        ]],
    -- [[  \ \  \   \ \  \    \ \  \__/\  \   \ \  \___/\  \ \ \  \___/\  \ \ \  \  \ \  \       ]],
    -- [[   \ \  \___\_\  \    \ \  \ \ \  \   \ \  \__\_\  \ \ \  \__\_\  \ \ \  \  \ \  \      ]],
    -- [[    \ \   ______  \    \ \  \_\_\  \   \ \   _______\ \ \   _______\ \ \  \__\_\  \     ]],
    -- [[     \ \  \   \ \  \    \ \   ____  \   \ \  \______/  \ \  \______/  \ \________  \    ]],
    -- [[      \ \  \   \ \  \    \ \  \__/\  \   \ \  \         \ \  \         \/_______/\  \   ]],
    -- [[       \ \__\   \ \__\    \ \__\ \ \__\   \ \__\         \ \__\                 \ \__\  ]],
    -- [[        \/__/    \/__/     \/__/  \/__/    \/__/          \/__/                  \/__/  ]],
    -- [[   ___________    ___________     ________    ___    ____________    __________         ]],
    -- [[  /\   _____  \  /\  _______ \   /\  ____ \  /\__\  /\   ______  \  /\   ____  \        ]],
    -- [[  \ \  \___/\__\ \ \ \      \ \  \ \ \   \ \ \/__/  \ \  \____/\  \ \ \  \__/\__\       ]],
    -- [[   \ \  \  \/__/  \ \ \      \ \  \ \ \   \ \   ___  \ \  \   \ \  \ \ \  \ \/__/_      ]],
    -- [[    \ \  \         \ \ \      \ \  \ \ \   \_\ /\  \  \ \  \   \ \  \ \ \  \ /\_  \     ]],
    -- [[     \ \  \     ___ \ \ \      \ \  \ \ \   / \\ \  \  \ \  \   \ \  \ \ \  \\/_/\ \    ]],
    -- [[      \ \  \___/\  \ \ \ \______\ \  \ \ \_/  / \ \  \  \ \  \   \ \  \ \ \  \__\_\ \   ]],
    -- [[       \ \__________\ \ \__________\  \ \____/   \ \__\  \ \__\   \ \__\ \ \_________\  ]],
    -- [[        \/__________/  \/__________/   \/___/     \/__/   \/__/    \/__/  \/_________/  ]],
    -- [[                                                                                        ]]
  }
end

dashboard.section.footer.val = footer()

dashboard.section.footer.opts.hl = "Type"
dashboard.section.header.opts.hl = "Include"
dashboard.section.buttons.opts.hl = "Keyword"

dashboard.opts.opts.noautocmd = true
-- vim.cmd([[autocmd User AlphaReady echo 'ready']])
alpha.setup(dashboard.opts)

